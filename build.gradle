plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'playlist.server'
version = '0.0.1-SNAPSHOT'

bootJar.enabled = false

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

subprojects {
    group = 'playlist.server'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
//    apply plugin: 'jacoco'

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-batch'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

        //Config Server Client
        implementation 'org.springframework.cloud:spring-cloud-config-client'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'

        runtimeOnly 'com.h2database:h2'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.batch:spring-batch-test'
        testImplementation 'org.springframework.security:spring-security-test'
    }

    configurations {
        complieOnly {
            extendsFrom annotationProcessor
        }
    }

    ext {
        set('springCloudVersion', "2022.0.4")
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    repositories {
        mavenCentral()
    }

    test {
        useJUnitPlatform()
//        finalizedBy jacocoTestReport
    }
}

// sonarqube 설정
//sonarqube {
//    properties {
//        property 'sonar.projectKey', 'example'
//        property 'sonar.organization', 'example'
//        property 'sonar.host.url', 'https://sonarcloud.io'
//        property 'sonar.sources', 'src'
//        property 'sonar.language', 'java'
//        property 'sonar.sourceEncoding', 'UTF-8'
//        property 'sonar.test.inclusions', '**/*Test.java'
//        property 'sonar.exclusions', '**/test/**, **/Q*.java, **/*Doc*.java, **/resources/** ,**/*Application*.java , **/*Config*.java,' +
//                '**/*Dto*.java, **/*Request*.java, **/*Response*.java ,**/*Exception*.java ,**/*ErrorCode*.java'
//        property 'sonar.java.coveragePlugin', 'jacoco'
//    }
//}

test {
    useJUnitPlatform()
}